
# _if_else_parsetab.py
# This file is automatically generated. Do not edit.
# pylint: disable=W,C,R
_tabversion = '3.10'

_lr_method = 'LALR'

_lr_signature = 'ELSE ID IF LBRACE LPAREN NUMBER OPERATOR RBRACE RPARENstatement : IF LPAREN condition RPAREN LBRACE statement RBRACE ELSE LBRACE statement RBRACEstatement : IF LPAREN condition RPAREN LBRACE statement RBRACEcondition : ID OPERATOR expressionexpression : IDexpression : NUMBERstatement : ID'

_lr_action_items = {'IF':([0,9,16,],[2,2,2,]),'ID':([0,4,8,9,16,],[3,6,10,3,3,]),'$end':([1,3,14,18,],[0,-6,-2,-1,]),'LPAREN':([2,],[4,]),'RBRACE':([3,13,14,17,18,],[-6,14,-2,18,-1,]),'RPAREN':([5,10,11,12,],[7,-4,-3,-5,]),'OPERATOR':([6,],[8,]),'LBRACE':([7,15,],[9,16,]),'NUMBER':([8,],[12,]),'ELSE':([14,],[15,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'statement':([0,9,16,],[1,13,17,]),'condition':([4,],[5,]),'expression':([8,],[11,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> statement","S'",1,None,None,None),
  ('statement -> IF LPAREN condition RPAREN LBRACE statement RBRACE ELSE LBRACE statement RBRACE','statement',11,'p_statement_if_else','if_else_parser.py',5),
  ('statement -> IF LPAREN condition RPAREN LBRACE statement RBRACE','statement',7,'p_statement_if','if_else_parser.py',9),
  ('condition -> ID OPERATOR expression','condition',3,'p_condition','if_else_parser.py',13),
  ('expression -> ID','expression',1,'p_expression_id','if_else_parser.py',17),
  ('expression -> NUMBER','expression',1,'p_expression_number','if_else_parser.py',21),
  ('statement -> ID','statement',1,'p_statement_expr','if_else_parser.py',25),
]
