
# _array_parsetab.py
# This file is automatically generated. Do not edit.
# pylint: disable=W,C,R
_tabversion = '3.10'

_lr_method = 'LALR'

_lr_signature = 'COMMA EQUALS ID LBRACKET NUMBER RBRACKETstatement : ID EQUALS LBRACKET elements RBRACKETelements : elements COMMA NUMBERelements : NUMBER'

_lr_action_items = {'ID':([0,],[2,]),'$end':([1,7,],[0,-1,]),'EQUALS':([2,],[3,]),'LBRACKET':([3,],[4,]),'NUMBER':([4,8,],[6,9,]),'RBRACKET':([5,6,9,],[7,-3,-2,]),'COMMA':([5,6,9,],[8,-3,-2,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'statement':([0,],[1,]),'elements':([4,],[5,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> statement","S'",1,None,None,None),
  ('statement -> ID EQUALS LBRACKET elements RBRACKET','statement',5,'p_statement_array','array_parser.py',5),
  ('elements -> elements COMMA NUMBER','elements',3,'p_elements','array_parser.py',9),
  ('elements -> NUMBER','elements',1,'p_elements_single','array_parser.py',13),
]
